$date
    Jan 23, 2023  15:38:51
$end
$version
    TOOL:	xmsim	20.09-s003
$end
$timescale
    1 ns
$end

$scope module spi_tb $end
$var reg       1 !    clk $end
$var reg       1 "    rst $end
$var reg       1 #    wr $end
$var wire      1 $    done  $end
$var wire      1 %    err  $end
$var reg       8 &    addr [7:0] $end
$var reg       8 '    din [7:0] $end
$var wire      8 (    dout [7:0] $end

$scope module dut $end
$var wire      1 )    wr  $end
$var wire      1 *    clk  $end
$var wire      1 +    rst  $end
$var wire      8 ,    addr [7:0] $end
$var wire      8 -    din [7:0] $end
$var wire      8 (    dout [7:0] $end
$var wire      1 $    done  $end
$var wire      1 %    err  $end
$var wire      1 .    mosireg  $end
$var wire      1 /    misoreg  $end
$var wire      1 0    csreg  $end
$var wire      1 1    readyreg  $end
$var wire      1 2    donereg  $end

$scope module ctrl_dut $end
$var wire      1 )    wr  $end
$var wire      1 +    rst  $end
$var wire      1 *    clk  $end
$var wire      1 1    ready  $end
$var wire      1 2    op_done  $end
$var wire      8 ,    addr [7:0] $end
$var wire      8 -    din [7:0] $end
$var wire      8 (    dout [7:0] $end
$var reg       1 3    cs $end
$var reg       1 4    mosi $end
$var wire      1 /    miso  $end
$var reg       1 5    done $end
$var reg       1 6    err $end
$var reg      17 7    din_reg [16:0] $end
$var reg       8 8    dout_reg [7:0] $end
$var integer  32 9    count $end
$var reg       3 :    state [2:0] $end
$upscope $end


$scope module mem_dut $end
$var wire      1 +    rst  $end
$var wire      1 *    clk  $end
$var wire      1 0    cs  $end
$var wire      1 .    miso  $end
$var reg       1 ;    mosi $end
$var reg       1 <    ready $end
$var reg       1 =    op_done $end
$var reg       8 >    mem[31] [7:0] $end
$var reg       8 ?    mem[30] [7:0] $end
$var reg       8 @    mem[29] [7:0] $end
$var reg       8 A    mem[28] [7:0] $end
$var reg       8 B    mem[27] [7:0] $end
$var reg       8 C    mem[26] [7:0] $end
$var reg       8 D    mem[25] [7:0] $end
$var reg       8 E    mem[24] [7:0] $end
$var reg       8 F    mem[23] [7:0] $end
$var reg       8 G    mem[22] [7:0] $end
$var reg       8 H    mem[21] [7:0] $end
$var reg       8 I    mem[20] [7:0] $end
$var reg       8 J    mem[19] [7:0] $end
$var reg       8 K    mem[18] [7:0] $end
$var reg       8 L    mem[17] [7:0] $end
$var reg       8 M    mem[16] [7:0] $end
$var reg       8 N    mem[15] [7:0] $end
$var reg       8 O    mem[14] [7:0] $end
$var reg       8 P    mem[13] [7:0] $end
$var reg       8 Q    mem[12] [7:0] $end
$var reg       8 R    mem[11] [7:0] $end
$var reg       8 S    mem[10] [7:0] $end
$var reg       8 T    mem[9] [7:0] $end
$var reg       8 U    mem[8] [7:0] $end
$var reg       8 V    mem[7] [7:0] $end
$var reg       8 W    mem[6] [7:0] $end
$var reg       8 X    mem[5] [7:0] $end
$var reg       8 Y    mem[4] [7:0] $end
$var reg       8 Z    mem[3] [7:0] $end
$var reg       8 [    mem[2] [7:0] $end
$var reg       8 \    mem[1] [7:0] $end
$var reg       8 ]    mem[0] [7:0] $end
$var integer  32 ^    count $end
$var reg      16 _    din [15:0] $end
$var reg       8 `    dout [7:0] $end
$var reg       3 a    state [2:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
1"
x#
x$
x%
bx &
bx '
bx (
x)
0*
1+
bx ,
bx -
x.
x/
x0
x1
x2
x3
x4
x5
x6
bx 7
bx 8
b0 9
b0 :
x;
x<
x=
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
b0 L
b0 M
b0 N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
b0 W
b0 X
b0 Y
b0 Z
b0 [
b0 \
b0 ]
b0 ^
bx _
bx `
b0 a
$end
#10
1!
1*
0;
0<
0=
13
04
06
05
0$
0%
0.
10
02
01
0/
#20
0!
0*
#30
1!
1*
#40
0!
0*
#50
1!
1*
#60
0!
0*
#70
1!
1*
#80
0!
0*
#90
1!
0"
1#
b10110 &
b10110 '
b10110 -
b10110 ,
1)
0+
1*
b0 _
b1 :
#100
0!
0*
#110
1!
1*
b10110000101101 7
b10 :
#120
0!
0*
#130
1!
1*
03
b11 :
00
#140
0!
0*
#150
1!
1*
b1 a
b1 9
14
1.
#160
0!
0*
#170
1!
1*
b10 a
b10 9
04
0.
#180
0!
0*
#190
1!
1*
b1 ^
b11 9
14
1.
#200
0!
0*
#210
1!
1*
b10 ^
b10 _
b100 9
#220
0!
0*
#230
1!
1*
b11 ^
b110 _
b101 9
04
0.
#240
0!
0*
#250
1!
1*
b100 ^
b110 9
14
1.
#260
0!
0*
#270
1!
1*
b101 ^
b10110 _
b111 9
04
0.
#280
0!
0*
#290
1!
1*
b110 ^
b1000 9
#300
0!
0*
#310
1!
1*
b111 ^
b1001 9
#320
0!
0*
#330
1!
1*
b1000 ^
b1010 9
#340
0!
0*
#350
1!
1*
b1001 ^
b1011 9
14
1.
#360
0!
0*
#370
1!
1*
b1010 ^
b1000010110 _
b1100 9
#380
0!
0*
#390
1!
1*
b1011 ^
b11000010110 _
b1101 9
04
0.
#400
0!
0*
#410
1!
1*
b1100 ^
b1110 9
14
1.
#420
0!
0*
#430
1!
1*
b1101 ^
b1011000010110 _
b1111 9
04
0.
#440
0!
0*
#450
1!
1*
b1110 ^
b10000 9
#460
0!
0*
#470
1!
1*
b1111 ^
b10001 9
#480
0!
0*
#490
1!
1*
b10000 ^
13
10
#500
0!
0*
#510
1!
1*
b10110 G
b0 a
1=
b0 ^
12
#520
0!
0*
#530
1!
1*
0=
b0 _
b0 9
15
b0 :
1$
02
0#
0)
#540
0!
0*
#550
1!
1*
b1 :
05
0$
#560
0!
0*
#570
1!
1*
b10110000101100 7
b10 :
#580
0!
0*
#590
1!
1*
03
b100 :
00
#600
0!
0*
#610
1!
1*
b1 a
b1 9
#620
0!
0*
#630
1!
1*
b11 a
b10 9
#640
0!
0*
#650
1!
1*
b1 ^
b11 9
14
1.
#660
0!
0*
#670
1!
1*
b10 ^
b10 _
b100 9
#680
0!
0*
#690
1!
1*
b11 ^
b110 _
b101 9
04
0.
#700
0!
0*
#710
1!
1*
b100 ^
b110 9
14
1.
#720
0!
0*
#730
1!
1*
b101 ^
b10110 _
b111 9
04
0.
#740
0!
0*
#750
1!
1*
b110 ^
b1000 9
#760
0!
0*
#770
1!
1*
b111 ^
b1001 9
#780
0!
0*
#790
1!
1*
b1000 ^
b0 9
13
b111 :
10
#800
0!
0*
#810
1!
1*
b10110 `
1<
b0 ^
b100 a
11
#820
0!
0*
#830
1!
1*
0<
01
b1 ^
b101 :
#840
0!
0*
#850
1!
1*
b10 ^
1;
b1 9
bx0 8
bx0 (
1/
#860
0!
0*
#870
1!
1*
b11 ^
b10 9
bx10 8
bx10 (
#880
0!
0*
#890
1!
1*
b100 ^
0;
b11 9
bx110 8
bx110 (
0/
#900
0!
0*
#910
1!
1*
b101 ^
1;
b100 9
bx0110 8
bx0110 (
1/
#920
0!
0*
#930
1!
1*
b110 ^
0;
b101 9
bx10110 8
bx10110 (
0/
#940
0!
0*
#950
1!
1*
b111 ^
b110 9
bx010110 8
bx010110 (
#960
0!
0*
#970
1!
1*
b1000 ^
b111 9
bx0010110 8
bx0010110 (
#980
0!
0*
#990
1!
1*
b0 ^
b0 a
1=
b1000 9
b10110 8
b10110 (
12
#1000
0!
0*
#1010
1!
1*
0=
b0 _
b0 9
15
b0 :
1$
02
#1020
0!
0*
#1030
1!
1*
b1 :
05
0$
#1040
0!
0*
#1050
1!
1*
b10 :
#1060
0!
0*
#1070
1!
1*
03
b100 :
00
#1080
0!
0*
#1090
1!
1*
b1 a
b1 9
#1100
0!
0*
#1110
1!
1*
b11 a
b10 9
#1120
0!
0*
#1130
1!
1*
b1 ^
b11 9
14
1.
#1140
0!
0*
#1150
1!
1*
b10 ^
b10 _
b100 9
#1160
0!
0*
#1170
1!
1*
b11 ^
b110 _
b101 9
04
0.
#1180
0!
0*
#1190
1!
1*
b100 ^
b110 9
14
1.
#1200
0!
0*
#1210
1!
1*
b101 ^
b10110 _
b111 9
04
0.
#1220
0!
0*
#1230
1!
1*
b110 ^
b1000 9
#1240
0!
0*
#1250
1!
1*
b111 ^
b1001 9
#1260
0!
0*
#1270
1!
1*
b1000 ^
b0 9
13
b111 :
10
#1280
0!
0*
#1290
1!
1*
1<
b0 ^
b100 a
11
#1300
0!
0*
#1310
1!
1*
0<
01
b1 ^
b101 :
#1320
0!
0*
#1330
1!
1*
b10 ^
1;
b1 9
1/
#1340
0!
0*
#1350
1!
1*
b11 ^
b10 9
#1360
0!
0*
#1370
1!
1*
b100 ^
0;
b11 9
0/
#1380
0!
0*
#1390
1!
1*
b101 ^
1;
b100 9
1/
#1400
0!
0*
#1410
1!
1*
b110 ^
0;
b101 9
0/
#1420
0!
0*
#1430
1!
1*
b111 ^
b110 9
#1440
0!
0*
#1450
1!
1*
b1000 ^
b111 9
#1460
0!
0*
#1470
1!
1*
b0 ^
b0 a
1=
b1000 9
12
#1480
0!
0*
#1490
1!
1*
0=
b0 _
b0 9
15
b0 :
1$
02
#1500
0!
0*
#1510
1!
1*
b1 :
05
0$
#1520
0!
0*
#1530
1!
1*
b10 :
#1540
0!
0*
#1550
1!
1*
03
b100 :
00
#1560
0!
0*
#1570
1!
1*
b1 a
b1 9
#1580
0!
0*
#1590
1!
1*
b11 a
b10 9
#1600
0!
0*
#1610
1!
1*
b1 ^
b11 9
14
1.
#1620
0!
0*
#1630
1!
1*
b10 ^
b10 _
b100 9
#1640
0!
0*
#1650
1!
1*
b11 ^
b110 _
b101 9
04
0.
#1660
0!
0*
#1670
1!
1*
b100 ^
b110 9
14
1.
#1680
0!
0*
#1690
1!
1*
b101 ^
b10110 _
b111 9
04
0.
#1700
0!
0*
#1710
1!
1*
b110 ^
b1000 9
#1720
0!
0*
#1730
1!
1*
b111 ^
b1001 9
#1740
0!
0*
#1750
1!
1*
b1000 ^
b0 9
13
b111 :
10
#1760
0!
0*
#1770
1!
1*
1<
b0 ^
b100 a
11
#1780
0!
0*
#1790
1!
1*
0<
01
b1 ^
b101 :
#1800
0!
0*
#1810
1!
1*
b10 ^
1;
b1 9
1/
#1820
0!
0*
#1830
1!
1*
b11 ^
b10 9
#1840
0!
0*
#1850
1!
1*
b100 ^
0;
b11 9
0/
#1860
0!
0*
#1870
1!
1*
b101 ^
1;
b100 9
1/
#1880
0!
0*
#1890
1!
1*
b110 ^
0;
b101 9
0/
#1900
0!
0*
#1910
1!
1*
b111 ^
b110 9
#1920
0!
0*
#1930
1!
1*
b1000 ^
b111 9
#1940
0!
0*
#1950
1!
1*
b0 ^
b0 a
1=
b1000 9
12
#1960
0!
0*
#1970
1!
1*
0=
b0 _
b0 9
15
b0 :
1$
02
#1980
0!
0*
#1990
1!
1*
b1 :
05
0$
#2000
0!
0*
#2010
